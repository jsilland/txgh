VERSION_FILE = './version.txt'

namespace :version do
  task :bump, [:level] do |t, args|
    levels = %w(major minor patch)
    level = args[:level]

    until levels.include?(level)
      STDOUT.write("Indicate version bump level (#{levels.join(', ')}): ")
      level = STDIN.gets.strip

      unless levels.include?(level)
        puts "That's not a valid version bump level, try again."
      end
    end

    level.strip!

    old_version = File.read(VERSION_FILE).strip
    major, minor, patch = old_version.split('.').map(&:to_i)

    case level
      when 'major'
        major += 1; minor = 0; patch = 0
      when 'minor'
        minor += 1; patch = 0
      when 'patch'
        patch += 1
    end

    new_version = [major, minor, patch].join('.')
    puts "Bumping from #{old_version} to #{new_version}"

    # rewrite version file
    File.write(VERSION_FILE, new_version)
  end

  task :history do
    version = File.read(VERSION_FILE).strip
    history = File.read('History.txt')
    history = "== #{version}\n* \n\n#{history}"
    File.write('History.txt', history)
    system 'vi History.txt'
  end

  task :commit_and_push do
    version = File.read(VERSION_FILE).strip
    system 'git add version.txt'
    system 'git add History.txt'
    system "git commit -m 'Bumping version to #{version}'"
    system 'git push origin HEAD'
  end
end

DOCKER_REPO = 'quay.io/lumoslabs/txgh'

namespace :publish do
  task :all do
    task_names = %w(
      version:bump version:history version:commit_and_push
      publish:update_docker_base_image publish:build_docker
      publish:publish_docker
    )

    task_names.each do |task_name|
      STDOUT.write "About to execute #{task_name}, continue? (yes/no/skip): "
      answer = STDIN.gets

      case answer.downcase
        when /ye?s?/
          Rake::Task[task_name].invoke
        when /no?/
          puts "Exiting!"
          exit 0
        else
          puts "Skipping #{task_name}"
      end
    end
  end

  task :update_docker_base_image do
    system("docker pull ruby:2.3")
  end

  task :build_docker do
    version = File.read(VERSION_FILE).strip
    system("docker build -t #{DOCKER_REPO}:latest -t #{DOCKER_REPO}:v#{version} .")
  end

  task :publish_docker do
    version = File.read(VERSION_FILE).strip
    system("docker push #{DOCKER_REPO}:latest")
    system("docker push #{DOCKER_REPO}:v#{version}")
  end
end

task publish: 'publish:all'
